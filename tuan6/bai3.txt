//Vũ Minh Hoàng - 20215386
// C++
#include <bits/stdc++.h>
using namespace std;
int main()
{
 int n, m, c, d, e = 1;
 scanf("%d %d", &n, &m); // Nhập số đỉnh n và số cạnh m
 vector<vector<int>> v(n + 1, vector<int>(n + 1, INT_MAX)); // Khởi tạo ma trận 
v với kích thước (n+1) x (n+1) và giá trị ban đầu là INT_MAX
 for (int i = 1; i <= n; i++) // Đặt giá trị 0 cho các đường chéo của ma trận (đường 
đi từ một đỉnh đến chính nó)
 v[i][i] = 0;
 while (m--) // Nhập trọng số của m cạnh vào ma trận
 {
 scanf("%d %d", &c, &d);
 scanf("%d", &v[c][d]);
 }
 // Thuật toán Floyd-Warshall
 for (int i = 1; i <= n; i++)
 {
 for (int j = 1; j <= n; j++)
 {
 if(j == i || v[j][i] == INT_MAX) continue; // Nếu đỉnh j trùng với đỉnh i hoặc 
không có cạnh nối giữa j và i, bỏ qua vòng lặp
 for (int k = 1; k <= n; k++)
 {
 if(k == i || v[i][k] == INT_MAX) continue;
 v[j][k] = min(v[j][k], v[j][i] + v[i][k]); // Cập nhật khoảng cách ngắn nhất 
giữa đỉnh j và k thông qua đỉnh trung gian i
 }
 }
 }
 // In ra ma trận khoảng cách ngắn nhất giữa các cặp đỉnh
 for (int i = 1; i <= n; i++)
 {
 for (int j = 1; j <= n; j++)
 {
 printf("%d ", v[i][j]);
 }
 printf("\n");
 }
}
